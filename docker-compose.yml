services:

  application:
    container_name: payroll-app
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    image: untilov/payroll
    restart: always
    expose:
      - 3000
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./.env.docker:/app/api/.env
    env_file:
      - .env.docker

  db:
    container_name: payroll-db
    image: postgres:15-alpine
    ports:
      - '5532:5432'
    volumes:
      - ./packages/postgres/init.postgres.sql:/docker-entrypoint-initdb.d/init.postgres.sql
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - ./.env.docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    # environment:
    #   POSTGRES_USER: payrolladm
    #   POSTGRES_PASSWORD: TopSecret123
    #   POSTGRES_DB_NAMES: payroll
    #   PGUSER: payrolladm

  reverse-proxy:
    container_name: payroll-nginx
    build:
      context: .
      dockerfile: ./packages/nginx/Dockerfile
    image: untilov/nginx
    restart: always
    ports:
      - 80:80

networks:
  default:
    name: payroll_network
    driver: bridge
    external: true
